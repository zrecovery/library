generator client {
  provider        = "prisma-client-js"
  //binaryTargets = ["native", "debian-openssl-3.0.x"]
  previewFeatures = ["views"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model article {
  id               Int                @id @default(autoincrement())
  title            String
  body             String
  created_at       DateTime           @default(now())
  updated_at       DateTime           @default(now())
  articles_authors articles_authors[]
  chapters         chapter[]

  @@map("articles")
}

model author {
  id               Int                @id @default(autoincrement())
  name             String
  created_at       DateTime           @default(now())
  updated_at       DateTime           @default(now())
  articles_authors articles_authors[]

  @@map("authors")
}

model articles_authors {
  id         Int      @id @default(autoincrement())
  article_id Int
  author_id  Int
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  authors    author?  @relation(fields: [author_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  articles   article? @relation(fields: [article_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model chapter {
  id         Int      @id @default(autoincrement())
  article_id Int
  series_id  Int
  order      Float
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  series     series?  @relation(fields: [series_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  articles   article? @relation(fields: [article_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("chapters")
}

model series {
  id         Int       @id @default(autoincrement())
  title      String
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now())
  chapters   chapter[]
}

model search {
  title String
  body  String
  rowid Int    @unique

  @@map("search")
}

view ArticleSearch {
  id    Int    @unique
  title String
  body  String
}
